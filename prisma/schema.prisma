datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id             Int            @id @default(autoincrement())
    name           String
    contact        String
    email          String         @unique
    address        String
    password       String
    token          Token?
    activeSemester Semester?      @relation(fields: [semesterId], references: [id])
    semesterId     Int?
    role           RoleType
    course         Course?        @relation(fields: [courseId], references: [id])
    courseId       Int?
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt
    Notification   Notification[]
    Subject        Subject[]
    Attendance     Attendance[]
}

model Attendance {
    id        Int      @id @default(autoincrement())
    date      DateTime
    present   Boolean
    subject   Subject  @relation(fields: [subjectId], references: [id])
    subjectId Int
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Token {
    id        Int      @id @default(autoincrement())
    token     String   @unique
    user      User     @relation(fields: [userId], references: [id])
    userId    Int      @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Course {
    id        Int        @id @default(autoincrement())
    name      String
    users     User[]
    semester  Semester[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
}

model Semester {
    id        Int       @id @default(autoincrement())
    name      String
    subjects  Subject[]
    course    Course?   @relation(fields: [courseId], references: [id])
    courseId  Int?
    users     User[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Subject {
    id         Int          @id @default(autoincrement())
    name       String
    code       String       @unique
    semester   Semester     @relation(fields: [semesterId], references: [id])
    semesterId Int
    courseId   Int
    teacher    User         @relation(fields: [teacherId], references: [id])
    teacherId  Int
    createdAt  DateTime     @default(now())
    updatedAt  DateTime     @updatedAt
    Attendance Attendance[]
}

model Notification {
    id        Int      @id @default(autoincrement())
    title     String
    message   String
    sentBy    User     @relation(fields: [sentById], references: [id])
    sentById  Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    sentToId  Int
}

enum RoleType {
    ADMIN
    TEACHER
    STUDENT
}
